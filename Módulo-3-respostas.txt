Manifesto Ágil:

1- A colaboração está na satisfação do cliente através da entrega contínua e adiantada, recebendo
   feedback do cliente a cada nível do projeto.

2- 

3- Dono de uma empresa de software, stakeholdes.

4- Se adaptar as mudanças do ambiente e da concorrência no mercado de software.

5- Investidores, stakeholdes.

6-

7-

8-

9-

10-

11-

12-


SCRUM

1- Dev Team, PO, Scrum Master.

2- Sim. Para definir a prioridade das histórias o PO analisa o valor agregado em cada sprint e o tamanho ou
   complexidade dela, dessa forma priorizando aquelas que possuem maior valor e menor complexidade.

3-

4- 

5- Porque o SCRUM trabalha com um gráfico que analisa o grau de tecnologia e conhecimento de requisitos. O SCRUM
   trabalha lado a lado com o cliente em busca de entender o que se espera do projeto, dessa forma a cada
   iteração se aproximando cada vez mais do produto final esperado.

6- 

7-

8- No final de cada sprint é realizado reuniões com todos os membros do SCRUM, em que o cliente irá testar
   as funcionalidades aplicadas na sprint retornando um feedback.

9- No final de cada sprint, caso aprovado pelo cliente se torna um release do projeto.

10- Não. Ele orienta sobre sobre como usar o SCRUM da melhor forma possível.

11- Analisar se um sprint está atrasada ou adiantada de acordo com o tempo e entregas.

12- A queda de desempenho ocorre quando a linha está acima da reta do gráfico e o aumento ocorre
    quando a linha está abaixo da reta do gráfico.


Extreme Programming

1- Sim. As mudanças solicitadas serão aceitas pela equipe para recondozir à direção correta. Os clientes
   recebem o feedback sobre o progresso a partir de testes de acitação e demonstrações ao final de cada
   iteração.

2-

3-

4- Compartilhamento do conhecimento, correção de falhas, manutenibilidade, confiança, amadurecimento,
   pressão do par, velocidade.

5-

6- Para receberem feedback constantemente e caminhar na direção correta. 

7-

8- A refatoração é feita sempre quando for possível;
   Configurar e dedicar um computador para integração;
   Integração de código de um par por vez;
