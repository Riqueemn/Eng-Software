1- Planejamento para o objetivo final, considerando um escopo;

   Tamanho estimado para avaliação de prazo, custo e alocação de equipe;

   Utiliza recurso técnicos;

   Responsabilidades em diferentes níveis;

   Atividades, eventualemte orgainzadas em blocos, orientado por
   práticas que podem:
   	-Possuir dependências.
	-Ser paralelizadas e, posteriormente, sincronizadas.
	-Ser decompostas para efeito de redução da complexidade e melhor gerenciamento.


2- A medida que se aumenta o numero de participantes em um projeto, cresce também 
   o número de canais de comunicação, logo torna-se mais complexo a gestão 
   e organização do projeto.


3- Não. O produto possui qualidade interna e externa, o máximo que o processo
   pode fazer é influienciar na qualidade das propriedades internas, mas não
   garante que a propriedade externar terá boa influencia das propriedades
   internas.


4- Usuários e cliente envolvido apenas no início e no fim do projeto;

   Não considera a evolução/mudança de requisitos ao longo do projeto;

   Testes executados tardiamente;

   Realocação de RH para atividades supostamente concluídas (problema de gestão);

5-

6- Desenvolvimento iterativo: é um método que visa antecipar os requisitos com maior risco
   para as primeiras iterações para mitigar esses riscos, dessa forma segmentando o projeto
   de forma que tenha integração para gerar o produto final.

   Desenvolvimento incremental: é um método que visa também diminuir os riscos, contudo ele entrega o projeto 
   em releases, ou seja, lançamentos com novas implementações até chegar no produto final.

   Sim, porque no iterativo terá só um produto final e sem release, dessa forma integrando todos os segmentos.


7- Menos riscos, possui processos em espiral que aumenta a análise de riscos técnicos gerencias evitando
   que torne problemático.

   Algumas consequencias dessa abordagem é que o gerenciamento é mais complexo para grandes projetos e
   no caso do processo espiral pode ter difícil prospecção do tempo necessário a cada ciclo.


8- Porque mitiga o desconhecimento do projeto quando se antecipa os requisitos com maior risco.


9- Sequencial, porque ainda existe aglutinamento de blocos sem que haja outros segmentos, exceto o
   segmento de testes.


10- O benefício é que colabora para a cultura da qualidade em projetos de software, porém ainda existe
    retrabalho e realocação e também reação a emergência de requisitos e difícil gestão de mudanças.

11- Análise de riscos técnicos e gerenciais em todas as etapas do projeto, visando reduzi-lo antes
    que se tornem problemáticos. A participação com o cliente é diferente, pois no modelo cascata
    só ocorre no final do processo, enquanto no modelo espiral ocorre a cada iteração.


12- Significa que reune as melhores práticas e ferramentas para construir um projeto.


13- 

14- Descrever o uso de uma funcionalidade do sistema.


15- São feitos na perspectiva da interação entre atores e o software.

16- 

17- Antecipação da implementação dos casos de uso mais críticos;
    Uso de prototipação para redução de incertezas;
    Verificação constante da qualidade;
    Controle de riscos desde o início do projeto;


18- Sim. Porque ele é baseado em componentes com ênfase na reutilização e manutenção. As interfaces
    são bem definidas entre componentes, que seguem princípios de alta coesão e baixo desacoplamento.


19-

20-

21- Análise de riscos.

22-

23- Qualquer produto: documento, relatório, código-fonte, executável, etc. Eles são produzidos, manipulado
    ou consumidos nas atividades.

24- Sim. Isso é importante para reduzir a ambiguidade, minimizar a sobrecarga associada à geração e à
    manutenção de documentos e maximizar o conteúdo das informações.


